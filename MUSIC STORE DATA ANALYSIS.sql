CREATE DATABASE MUSIC_STORE;
USE MUSIC_STORE;

SELECT * FROM ALBUM;
SELECT * FROM ARTIST;
SELECT * FROM CUSTOMER;
SELECT * FROM EMPLOYEE;
SELECT * FROM GENRE;
SELECT * FROM INVOICE;
SELECT * FROM INVOICE_LINE;
SELECT * FROM MEDIA_TYPE;
SELECT * FROM PLAYLIST;
SELECT * FROM PLAYLIST_TRACK;
SELECT * FROM TRACK;


-- WHO IS THE SENIOR MOST EMPLOYEE BASED ON JOB TITLE???


SELECT FIRST_NAME,LAST_NAME,TITLE FROM EMPLOYEE
ORDER BY LEVELS DESC
LIMIT 1;



-- WHICH COUNTRIES HAVE THE MOST INVOICES??

SELECT BILLING_COUNTRY ,COUNT(*) FROM INVOICE
GROUP BY BILLING_COUNTRY
ORDER BY COUNT(*) DESC
LIMIT 1 ;


-- WHAT ARE TOP 3 VALUES OF TOTAL INVOICE??

SELECT TOTAL FROM INVOICE
ORDER BY TOTAL DESC;


-- WRITE A QUERY THAT RETURNS ONE CITY THAT HAS THE HIGHEST SUM OF INVOICE TOTALS AND
-- RETURN BOTH THE CITY NAME AND SUM OF ALL INVOICE TOTALS??

SELECT BILLING_CITY, SUM(TOTAL) AS "INVOICE TOTAL" FROM INVOICE
GROUP BY BILLING_CITY
ORDER BY "INVOICE TOTAL"
LIMIT 1;


-- WRITE A QUERY THAT RETURNS THE PERSON WHO HAS SPENT THE MOST MONEY??

SELECT C.CUSTOMER_ID, FIRST_NAME, LAST_NAME, SUM(TOTAL) AS TOTAL_SPENDING FROM CUSTOMER AS C
JOIN INVOICE AS I 
ON C.CUSTOMER_ID=I.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID 
ORDER BY TOTAL_SPENDING DESC
LIMIT 1;


-- WRITE A QUERY TO RETURN THE EMAIL, FIRST NAME, LAST NAME AND GENRE OF ALL ROCK MUSIC LISTENERS.
-- RETURN YOUR LIST ORDERED ALPHABETICALLY BY EMAIL STARTING WITH A.

SELECT DISTINCT EMAIL,FIRST_NAME,LAST_NAME, G.NAME FROM CUSTOMER AS C
JOIN INVOICE AS I
ON C.CUSTOMER_ID=I.CUSTOMER_ID
JOIN INVOICE_LINE AS IL
ON I.INVOICE_ID=IL.INVOICE_ID
JOIN TRACK AS T
ON T.TRACK_ID=IL.TRACK_ID
JOIN GENRE AS G
ON T.GENRE_ID=G.GENRE_ID
WHERE G.NAME = "ROCK"
ORDER BY EMAIL ASC ;



-- WRITE A QUERY THAT RETURNS THE ARTIST NAME AND TOTAL TRACK COUNT OF THE TOTAL TOP 10 ROCK BANDS.



SELECT AR.ARTIST_ID,AR.NAME  ,COUNT(AR.ARTIST_ID) AS NO_OF_SONGS FROM TRACK AS TR
JOIN ALBUM AS ALB
ON ALB.ALBUM_ID= TR.ALBUM_ID
JOIN ARTIST AS AR
ON ALB.ARTIST_ID=AR.ARTIST_ID
JOIN GENRE AS GE
ON GE.GENRE_ID=TR.GENRE_ID
WHERE GE.NAME="ROCK"
GROUP BY AR.ARTIST_ID,AR.NAME
ORDER BY NO_OF_SONGS DESC
LIMIT 10 ; 



-- WRITE A QUERY  TO RETURN THE NAME AND MILLISECONDS FOR EACH TRACK. ORDER BY THE SONG LENGTH WITH THE LONGEST SONGS LISTED FIRST 


SELECT NAME,MILLISECONDS FROM TRACK
WHERE MILLISECONDS > (SELECT AVG(MILLISECONDS) AS AVG_TRACK_LENGTH
					  FROM TRACK)
ORDER BY MILLISECONDS DESC;


-- FIND HOW MUCH AMOUNT SPENT BY EACH CUSTOMER ON ARTIST? 
-- WRITE A QUERY TO RETURN CUSTOMER NAME , ARTIST NAME AND TOTAL SPENT..


WITH BEST_SELLING_ARTIST AS (SELECT ARTIST.ARTIST_ID AS ARTIST_ID,ARTIST.NAME AS ARTIST_NAME,
                              SUM(INVOICE_LINE.UNIT_PRICE*INVOICE_LINE.QUANTITY) AS TOTAL_SALES FROM INVOICE_LINE
JOIN TRACK ON TRACK.TRACK_ID= INVOICE_LINE.TRACK_ID
JOIN ALBUM ON ALBUM.ALBUM_ID=TRACK.ALBUM_ID
JOIN ARTIST ON ARTIST.ARTIST_ID=ALBUM.ARTIST_ID
GROUP BY ARTIST_ID,ARTIST_NAME
ORDER BY TOTAL_SALES DESC
LIMIT 1)

SELECT C.CUSTOMER_ID,C.FIRST_NAME,C.LAST_NAME,BSA.ARTIST_NAME,SUM(IL.UNIT_PRICE*IL.QUANTITY) AS AMOUNT_SPENT 
FROM INVOICE AS I
JOIN CUSTOMER AS C
ON C.CUSTOMER_ID=I.CUSTOMER_ID
JOIN INVOICE_LINE AS IL
ON IL.INVOICE_ID=I.INVOICE_ID
JOIN TRACK AS T
ON T.TRACK_ID=IL.TRACK_ID
JOIN ALBUM AS ALB
ON ALB.ALBUM_ID=T.ALBUM_ID
JOIN BEST_SELLING_ARTIST AS BSA 
ON BSA.ARTIST_ID=ALB.ARTIST_ID
GROUP BY C.CUSTOMER_ID,C.FIRST_NAME,C.LAST_NAME,BSA.ARTIST_NAME
ORDER BY AMOUNT_SPENT DESC;


-- WE WANT TO FIND OUT THE MOST POPULAR MUSIC GENRE FOR EACH COUNTRY AND 
-- WE DETERMINE THE MOST POPULAR GENRE AS THE GENRE WITH HIGHEST AMOUNT OF PURCHASES.
-- WRITE A QUERY THAT RETURNS EACH COUNTRY ALONG WITH THE TOP GENRE.
-- FOR COUNTRIES WHERE THE MAXIMUM NUMBER OF PURCHASES IS SHARED RETURN ALL GENRES.


WITH POPULAR_GENRE AS (
SELECT COUNT(INVOICE_LINE.QUANTITY) AS PURCHASES, CUSTOMER.COUNTRY,GENRE.NAME,GENRE.GENRE_ID,
ROW_NUMBER() OVER (PARTITION BY CUSTOMER.COUNTRY ORDER BY COUNT(INVOICE_LINE.QUANTITY) DESC) AS ROW_NO
FROM INVOICE_LINE
JOIN INVOICE ON INVOICE.INVOICE_ID=INVOICE_LINE.INVOICE_ID
JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN TRACK ON TRACK.TRACK_ID=INVOICE_LINE.TRACK_ID
JOIN GENRE ON GENRE.GENRE_ID=TRACK.GENRE_ID
GROUP BY 2,3,4
ORDER BY 2 ASC, 1 DESC)

SELECT * FROM POPULAR_GENRE 
WHERE ROW_NO<=1;


-- WRITE A QUERY THAT DETERMINES THE CUSTOMER THAT HAS SPENT THE MOST ON MUSIC FOR EACH COUNTRY.
-- WRITE A QUERY THAT RETURNS THE COUNTRY ALONG WITH THE TOP CUSTOMER AND HOW MUCH THEY SPENT.
-- FOR COUNTRIES WHERE THE TOP AMOUNT SPENT IS SHARED, PROVIDE ALL CUSTOMERS WHO SPENT THIS AMOUNT.


WITH CUSTOMER_WITH_COUNTRY AS (
SELECT CUSTOMER.CUSTOMER_ID,FIRST_NAME,LAST_NAME,BILLING_COUNTRY,SUM(TOTAL) AS TOTAL_SPENDING,
ROW_NUMBER() OVER(PARTITION BY BILLING_COUNTRY ORDER BY SUM(TOTAL) DESC) AS ROW_NO 
FROM INVOICE
JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
GROUP BY 1,2,3,4
ORDER BY 4 ASC, 5 DESC)

SELECT * FROM CUSTOMER_WITH_COUNTRY;
